(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{514:function(t,s,a){"use strict";a.r(s);var e=a(6),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("现在代码管理工具基本是 git 的天下了，除了一些很保守的公司还在用 svn，其他基本都是自己搭一个 gitlab，下面总结一下 git 实用技巧。")]),t._v(" "),a("h3",{attrs:{id:"本地目录如何关联远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地目录如何关联远程仓库"}},[t._v("#")]),t._v(" 本地目录如何关联远程仓库?")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("主机名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("网址"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@github.com:wulv/scripts.git\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"如何让推送不用每次输密码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何让推送不用每次输密码"}},[t._v("#")]),t._v(" 如何让推送不用每次输密码？")]),t._v(" "),a("p",[t._v("使用 ssh 的方式，在 GitHub 的https://github.com/settings/keys设置一下SSH keys，关于 SSH keys 生成的问题查看https://help.github.com/articles/connecting-to-github-with-ssh/")]),t._v(" "),a("h3",{attrs:{id:"如何回退一个文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何回退一个文件"}},[t._v("#")]),t._v(" 如何回退一个文件？")]),t._v(" "),a("ul",[a("li",[t._v("如果还没 git add，使用 ctrl + z 吧，如果想回到没添加文件之前，使用 git clean -df")]),t._v(" "),a("li",[t._v("如果已经 git add，还没 commit，使用 git checkout -- files")]),t._v(" "),a("li",[t._v("如果已经 git commit，还没有 push，使用 git reset "),a("code",[t._v("<commit>")]),t._v(" files")]),t._v(" "),a("li",[t._v("如果已经 git push 了，使用 git revert "),a("code",[t._v("<commit>")]),t._v("，恢复一个指定提交。")])]),t._v(" "),a("h3",{attrs:{id:"已经添加到仓库的文件如何忽略不提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#已经添加到仓库的文件如何忽略不提交"}},[t._v("#")]),t._v(" 已经添加到仓库的文件如何忽略不提交？")]),t._v(" "),a("p",[t._v("将文件添加到.gitignore，然后 git rm files")]),t._v(" "),a("h3",{attrs:{id:"当前分支还没开发完-突然需要到另外一个分支修复紧急-bug-如何处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#当前分支还没开发完-突然需要到另外一个分支修复紧急-bug-如何处理"}},[t._v("#")]),t._v(" 当前分支还没开发完，突然需要到另外一个分支修复紧急 bug 如何处理？")]),t._v(" "),a("p",[t._v("首先确认当前分支能否提交，可以提交的直接 commit，但一般代码没写完不好提交，就储藏工作目录与暂存区的状态到堆栈中 git stash，切换到另外一个分支修复 bug 后，切回本分支，git stash pop。")]),t._v(" "),a("h3",{attrs:{id:"仓库依赖另外一个仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#仓库依赖另外一个仓库"}},[t._v("#")]),t._v(" 仓库依赖另外一个仓库？")]),t._v(" "),a("p",[t._v("比如本博客仓库依赖一个主题，但我想对这个主题进行一些修改，首先我从原作者的主题仓库 fork 一份到我自己仓库，做一些修改，以后原作者有更新我还是想 pull 过来，这样既享受原作者的更新，又可以自己修改一些特殊的需求。将 fork 下来的仓库与原作者的仓库关联起来：git remote add remote-name remote-url，然后更新时拉取指定远程仓库指定分支到本地仓库指定分支：git pull remoterepository branchname[:localbranch]。")]),t._v(" "),a("p",[t._v("在父仓库里添加子仓库：git submodule add repository-url dir，这个时候会出现一个.gitmodules 文件,这是一个配置文件，保存了项目 URL 和你拉取到的本地子目录。如果克隆了一个带子模块的项目，你必须运行两个命令：git submodule init 来初始化你的本地配置文件，git submodule update 来从那个项目拉取所有数据并检出你上层项目里所列的合适的提交。")]),t._v(" "),a("h3",{attrs:{id:"如何查看提交记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何查看提交记录"}},[t._v("#")]),t._v(" 如何查看提交记录？")]),t._v(" "),a("ul",[a("li",[t._v("git log：查看提交记录")]),t._v(" "),a("li",[t._v("git log --oneline：查看提交记录，以 oneline 形式显示，只显示一行，显示的内容时提交 hash 的前 7 位与提交消息")]),t._v(" "),a("li",[t._v("git log -p -times：表示查看最近 times 次提交改变的内容")]),t._v(" "),a("li",[t._v('git log --author="'),a("code",[t._v("<pattern>")]),t._v('"： 查找某位作者的提交记录')]),t._v(" "),a("li",[t._v('git log --grep="'),a("code",[t._v("<pattern>")]),t._v('"：搜索有某字符串的提交记录')]),t._v(" "),a("li",[t._v("git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit：图形化显示提交历史")])]),t._v(" "),a("h3",{attrs:{id:"比较两次提交或分支的差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较两次提交或分支的差异"}},[t._v("#")]),t._v(" 比较两次提交或分支的差异？")]),t._v(" "),a("ul",[a("li",[t._v("git diff：查看工作目录与暂存区的差异")]),t._v(" "),a("li",[t._v("git diff --cached ["),a("code",[t._v("<commit>")]),t._v("]：查看暂存区与指定提交（默认是 HEAD）的差异")]),t._v(" "),a("li",[t._v("git diff "),a("code",[t._v("<commit>")]),t._v("：查看工作目录与指定提交的差异")]),t._v(" "),a("li",[t._v("git diff "),a("code",[t._v("<commit>")]),t._v("：查看工作目录与指定提交的差异")]),t._v(" "),a("li",[t._v("git diff "),a("code",[t._v("<commit>")]),t._v(" "),a("code",[t._v("<commit>")]),t._v("：查看两次指定提交的差异")]),t._v(" "),a("li",[t._v("git diff branchname：查看工作目录与指定分支的差异")]),t._v(" "),a("li",[t._v("git diff branchname branchname：查看两个指定分支间的差异")])]),t._v(" "),a("blockquote",[a("p",[t._v("上面的所有操作后面都可以加上-- dir 表示查看该目录下面的差异，在后面加上>patchname.patch 表示将差异生成补丁，patchname 是补丁的名字。")])]),t._v(" "),a("h3",{attrs:{id:"有两个稳定版本-将其中一个版本的功能应用到另外一个版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有两个稳定版本-将其中一个版本的功能应用到另外一个版本"}},[t._v("#")]),t._v(" 有两个稳定版本，将其中一个版本的功能应用到另外一个版本？")]),t._v(" "),a("p",[t._v("比如某仓库有 VIP 版和普通版，分别在两个分支开发，普通版更新了一些功能，VIP 版也希望将更新应用到分支，但又不能直接将普通版的分支 merge 过来，这个时候使用：git cherry-pick "),a("code",[t._v("<commit id>")]),t._v("将另一个分支上面的指定提交应用到当前分支上。")]),t._v(" "),a("h3",{attrs:{id:"分支太多-如何批量删除一个星期之前分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支太多-如何批量删除一个星期之前分支"}},[t._v("#")]),t._v(" 分支太多，如何批量删除一个星期之前分支？")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除一个星期之前的所有本地分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("k")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" /"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("*/d"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -1 --before"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1 week ago'")]),t._v(" -s $k"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -D "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$k")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),t._v(" "),a("comment-comment")],1)}),[],!1,null,null,null);s.default=r.exports}}]);